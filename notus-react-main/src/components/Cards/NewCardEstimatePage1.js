import React, { useState, useEffect } from "react";
import { generateEstimateNumber } from "../../utils/estimateUtils";

function NewCardEstimatePage1({ formData, onChange, errors, onNext }) {
  const [autoGeneratedEstimateNo, setAutoGeneratedEstimateNo] = useState("");

  useEffect(() => {
    const newEstimateNo = generateEstimateNumber();
    setAutoGeneratedEstimateNo(newEstimateNo);
    onChange({ target: { id: "estimateNo", value: newEstimateNo } });
  }, [onChange]);

  return (
    <div className="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-white border-0">
      <div className="flex-auto px-4 lg:px-10 py-10 pt-0">
        <form onSubmit={(e) => { e.preventDefault(); onNext(); }}>
          <h6 className="text-blueGray-400 text-sm mt-3 mb-6 font-bold uppercase">General Information</h6>
          <div className="flex flex-wrap">
            <div className="w-full lg:w-6/12 px-4">
              <div className="relative w-full mb-3">
                <label className="block uppercase text-blueGray-600 text-xs font-bold mb-2" htmlFor="estimateNo">
                  Estimate No
                </label>
                <input
                  type="text"
                  id="estimateNo"
                  className={`border-0 px-3 py-3 bg-white rounded shadow focus:outline-none focus:ring w-full ${errors.estimateNo ? "border-red-500" : ""}`}
                  value={formData.estimateNo || autoGeneratedEstimateNo}
                  readOnly
                />
                {errors.estimateNo && <p className="text-red-500 text-xs mt-1">{errors.estimateNo}</p>}
              </div>
            </div>
            <div className="w-full lg:w-6/12 px-4">
              <div className="relative w-full mb-3">
                <label className="block uppercase text-blueGray-600 text-xs font-bold mb-2" htmlFor="costCenter">
                  Cost Center (Project No)
                </label>
                <input
                  type="text"
                  id="costCenter"
                  className={`border-0 px-3 py-3 bg-white rounded shadow focus:outline-none focus:ring w-full ${errors.costCenter ? "border-red-500" : ""}`}
                  value={formData.costCenter || ""}
                  onChange={onChange}
                  placeholder="Enter Cost Center"
                  required
                />
                {errors.costCenter && <p className="text-red-500 text-xs mt-1">{errors.costCenter}</p>}
              </div>
            </div>
            <div className="w-full lg:w-6/12 px-4">
              <div className="relative w-full mb-3">
                <label className="block uppercase text-blueGray-600 text-xs font-bold mb-2" htmlFor="estimateDt">
                  Estimate Date
                </label>
                <input
                  type="date"
                  id="estimateDt"
                  className={`border-0 px-3 py-3 bg-white rounded shadow focus:outline-none focus:ring w-full ${errors.estimateDt ? "border-red-500" : ""}`}
                  value={formData.estimateDt || ""}
                  onChange={onChange}
                  required
                />
                {errors.estimateDt && <p className="text-red-500 text-xs mt-1">{errors.estimateDt}</p>}
              </div>
            </div>
            <div className="w-full lg:w-6/12 px-4">
              <div className="relative w-full mb-3">
                <label className="block uppercase text-blueGray-600 text-xs font-bold mb-2" htmlFor="fileRef">
                  File Reference
                </label>
                <input
                  type="text"
                  id="fileRef"
                  className={`border-0 px-3 py-3 bg-white rounded shadow focus:outline-none focus:ring w-full ${errors.fileRef ? "border-red-500" : ""}`}
                  value={formData.fileRef || ""}
                  onChange={onChange}
                  placeholder="Enter File Reference"
                  required
                />
                {errors.fileRef && <p className="text-red-500 text-xs mt-1">{errors.fileRef}</p>}
              </div>
            </div>
            <div className="w-full lg:w-6/12 px-4">
              <div className="relative w-full mb-3">
                <label className="block uppercase text-blueGray-600 text-xs font-bold mb-2" htmlFor="rejectReason">
                  Reject Reason
                </label>
                <input
                  type="text"
                  id="rejectReason"
                  className="border-0 px-3 py-3 bg-white rounded shadow focus:outline-none focus:ring w-full"
                  value={formData.rejectReason || ""}
                  onChange={onChange}
                  placeholder="Enter Reject Reason"
                />
              </div>
            </div>
            <div className="w-full lg:w-6/12 px-4">
              <div className="relative w-full mb-3">
                <label className="block uppercase text-blueGray-600 text-xs font-bold mb-2" htmlFor="esName">
                  Client Name
                </label>
                <input
                  type="text"
                  id="esName"
                  className="border-0 px-3 py-3 bg-white rounded shadow focus:outline-none focus:ring w-full"
                  value={formData.esName || ""}
                  onChange={onChange}
                  placeholder="Enter Client Name"
                />
              </div>
            </div>
            <div className="w-full lg:w-12/12 px-4">
              <div className="relative w-full mb-3">
                <label className="block uppercase text-blueGray-600 text-xs font-bold mb-2" htmlFor="descr">
                  Description
                </label>
                <textarea
                  id="descr"
                  className="border-0 px-3 py-3 bg-white rounded shadow focus:outline-none focus:ring w-full h-48 resize-vertical"
                  value={formData.descr || ""}
                  onChange={onChange}
                  placeholder="Enter Description"
                />
              </div>
            </div>
          </div>
        </form>
      </div>
    </div>
  );
}

export default NewCardEstimatePage1;